{"version":3,"sources":["components/logo.png","components/nav/Navigation.js","components/Card.js","components/pages/PokeList.js","components/TypeSearch.js","components/TypeList.js","components/pages/Type.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","navSpace","padding","spacing","textAlign","breakpoints","down","marginLeft","bar","background","hide","up","display","hideSm","nl","color","textDecoration","textTransform","letterSpacing","logo","paddingTop","width","marginRight","link","ButtonAppBar","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","Toolbar","disableGutters","Grid","container","item","xs","IconButton","aria-controls","onClick","event","currentTarget","edge","aria-label","fontSize","id","keepMounted","onClose","MenuItem","to","md","Typography","variant","style","src","Logo","alt","PokeCard","props","name","img","text","Card","elevation","this","handleClick","CardMedia","image","height","backgroundSize","title","CardContent","align","component","Component","PokeList","state","pList","getList","bind","check","i","rand","Math","floor","random","includes","push","forEach","num","fetch","headers","then","response","json","poke","x","moves","move","sprites","front_default","setState","catch","error","console","log","Fragment","CssBaseline","Container","maxWidth","margin","map","index","key","marginBottom","List","ListItem","ListItemText","primary","formControl","minWidth","SimpleSelect","FormControl","InputLabel","Select","value","type","onChange","handleChange","TypeList","preventDefault","target","tList","getTypeList","prevProps","len","pokemon","length","url","substring","lastIndexOf","imgUrl","Type","isHidden","typeName","overflow","marginTop","createMuiTheme","palette","default","main","light","dark","secondary","typography","fontFamily","overrides","MuiCard","backgroundColor","MuiCardContent","MuiAppBar","colorDefault","MuiSelect","filled","App","exact","path","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,kC,mXCarCC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,SAAS,aACPC,QAASJ,EAAMK,QAAQ,GACvBC,UAAW,UACVN,EAAMO,YAAYC,KAAK,MAAQ,CAC9BC,WAAY,OAGhBC,IAAI,eACDV,EAAMO,YAAYC,KAAK,MAAQ,CAC9BG,WAAY,YAGhBC,KAAK,aACHH,WAAY,QACXT,EAAMO,YAAYM,GAAG,MAAQ,CAC5BC,QAAS,SAGbC,OAAO,eACJf,EAAMO,YAAYC,KAAK,MAAQ,CAC9BM,QAAS,SAGbE,GAAI,CACFC,MAAO,UACPR,WAAY,MACZS,eAAgB,OAChBC,cAAe,YACfC,cAAepB,EAAMK,QAAQ,KAE/BgB,KAAK,aACHC,WAAYtB,EAAMK,QAAQ,OAC1BkB,MAAO,MACPC,YAAaxB,EAAMK,QAAQ,IAC1BL,EAAMO,YAAYC,KAAK,MAAQ,CAC9Be,MAAO,QAGXE,KAAM,CACJR,MAAO,UACPC,eAAgB,YAIL,SAASQ,IACtB,IAAMC,EAAU7B,IADqB,EAEL8B,IAAMC,SAAS,MAFV,mBAE9BC,EAF8B,KAEpBC,EAFoB,KAG/BC,EAAOC,QAAQH,GAKfI,EAAc,WAClBH,EAAY,OAGd,OACE,yBAAKI,UAAWR,EAAQ1B,MACtB,kBAACmC,EAAA,EAAD,CAAQnB,MAAM,UAAUkB,UAAWR,EAAQjB,IAAK2B,SAAS,UACvD,kBAACC,EAAA,EAAD,CAASC,gBAAgB,GACvB,kBAACC,EAAA,EAAD,CAAMC,WAAS,GAEb,kBAACD,EAAA,EAAD,CAAME,MAAM,EAAMC,GAAI,EAAGR,UAAWR,EAAQf,MAC1C,kBAACgC,EAAA,EAAD,CACEC,gBAAc,cACdC,QAjBK,SAAAC,GACjBhB,EAAYgB,EAAMC,gBAiBNC,KAAK,QACLhC,MAAM,UACNiC,aAAW,QAEX,kBAAC,IAAD,CAAUC,SAAS,WAErB,kBAAC,IAAD,CACEC,GAAG,cACHtB,SAAUA,EACVuB,aAAW,EACXrB,KAAMA,EACNsB,QAASpB,GAET,kBAACqB,EAAA,EAAD,CAAUT,QAASZ,GACjB,kBAAC,IAAD,CAASsB,GAAG,IAAIrB,UAAWR,EAAQF,MAAnC,aAIF,kBAAC8B,EAAA,EAAD,CAAUT,QAASZ,GACjB,kBAAC,IAAD,CAASsB,GAAG,QAAQrB,UAAWR,EAAQF,MAAvC,cAON,kBAACe,EAAA,EAAD,CAAME,MAAM,EAAMe,GAAI,EAAGd,GAAI,EAAGR,UAAWR,EAAQZ,QACjD,kBAAC2C,EAAA,EAAD,CAAYC,QAAQ,KAAKxB,UAAWR,EAAQxB,UAC1C,kBAAC,IAAD,CAASqD,GAAG,IAAIrB,UAAWR,EAAQX,IAAnC,cAKJ,kBAACwB,EAAA,EAAD,CAAME,MAAM,EAAMe,GAAI,EAAGd,GAAI,EAAGR,UAAWR,EAAQZ,QACjD,kBAAC2C,EAAA,EAAD,CAAYC,QAAQ,KAAKxB,UAAWR,EAAQxB,UAC1C,kBAAC,IAAD,CAASqD,GAAG,QAAQrB,UAAWR,EAAQX,IAAvC,aAMJ,kBAACwB,EAAA,EAAD,CACEE,MAAM,EACNe,GAAI,EACJd,GAAI,EACJR,UAAWR,EAAQxB,SACnByD,MAAO,CAAExD,QAAS,EAAGK,WAAY,EAAGH,UAAW,UAE/C,yBAAKuD,IAAKC,IAAMC,IAAI,WAAW5B,UAAWR,EAAQN,Y,+BCvFjD2C,E,YArCb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,KAAO,GACZ,EAAKC,IAAM,GACX,EAAKf,GAAK,GACV,EAAKgB,KAAO,YALK,E,oEASZH,GACL,OACE,kBAACI,EAAA,EAAD,CACEC,UAAW,EACXV,MAAO,CAAErC,MAAO,OAChBuB,QAASyB,KAAKN,MAAMO,aAEpB,kBAACC,EAAA,EAAD,CACErB,GAAImB,KAAKN,MAAMb,GACfsB,MAAOH,KAAKN,MAAME,IAClBP,MAAO,CAAEe,OAAQ,GAAIC,eAAgB,WACrCC,MAAON,KAAKN,MAAMC,OAEpB,kBAACY,EAAA,EAAD,KACE,kBAACpB,EAAA,EAAD,CACEqB,MAAM,SACNpB,QAAQ,KACRqB,UAAU,KACV/D,MAAOsD,KAAKN,MAAMG,KAClBR,MAAO,CAAEzC,cAAe,eAEvBoD,KAAKN,MAAMC,Y,GA/BDe,a,0BCqHRC,E,YA9Gb,WAAYjB,GAAQ,IAAD,8BACjB,4CAAMA,KACDkB,MAAQ,CACXC,MAAO,IAET,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBALE,E,iFAWjB,IAHmB,IAAD,OAEdC,EAAQ,GACHC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE3B,IAAIC,EAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EAExCL,EAAMM,SAASJ,IAKlBA,EAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EAEzCL,EAAMO,KAAKL,IALXF,EAAMO,KAAKL,GAQfF,EAAMQ,SAAQ,SAAAC,GAAG,OAAI,EAAKX,QAAQW,Q,8BAG5BA,GAAM,IAAD,OACXC,MAAM,qCAAuCD,EAAM,IAAK,CACtDE,QAAS,CACP,eAAgB,mBAChB,8BAA+B,OAGhCC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,IAAIlB,EAAK,YAAO,EAAKD,MAAMC,OAEvBmB,EAAI,EACJC,EAAQ,GACZF,EAAKE,MAAMT,SAAQ,SAAAU,GACXF,GAAK,GACTC,EAAMV,KAAKW,EAAKA,KAAKvC,MAEvBqC,GAAQ,KAGVnB,EAAMU,KAAK,CACT1C,GAAIkD,EAAKlD,GACTc,KAAMoC,EAAKpC,KACXC,IAAKmC,EAAKI,QAAQC,cAClBH,MAAOA,IAET,EAAKI,SAAS,CAAExB,MAAOA,OAGxByB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,qBAAsBF,Q,+BAG5C,IAAD,OACP,OACE,kBAAC,IAAMG,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CACEC,SAAS,KACT7E,gBAAgB,EAChBqB,MAAO,CAAEyD,OAAQ,UAEjB,kBAAC3D,EAAA,EAAD,CAAYsB,UAAU,OACpB,kBAACxC,EAAA,EAAD,CAAMC,WAAS,GAEZ8B,KAAKY,MAAMC,MAAMkC,KAAI,SAAChB,EAAMiB,GAAP,OACpB,kBAAC/E,EAAA,EAAD,CACEgF,IAAKlB,EAAKlD,GACVV,MAAI,EACJC,GAAI,EACJc,GAAI,EACJG,MAAO,CAAE6D,aAAc,MACvB3E,QAAS,EAAK0B,aAEd,kBAAC,EAAD,CAAMN,KAAMoC,EAAKpC,KAAMC,IAAKmC,EAAKnC,IAAKf,GAAIkD,EAAKlD,KAC/C,yBAAKA,GAAIkD,EAAKlD,IACZ,kBAACsE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAcC,QAASvB,EAAKE,MAAM,MAEpC,kBAACmB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAcC,QAASvB,EAAKE,MAAM,IAAM,SAE1C,kBAACmB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAcC,QAASvB,EAAKE,MAAM,IAAM,SAE1C,kBAACmB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAcC,QAASvB,EAAKE,MAAM,IAAM,uB,GAnGzCvB,a,2BCJjBnF,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC8H,YAAa,CACXT,OAAQrH,EAAMK,QAAQ,GACtB0H,SAAU,SAIC,SAASC,EAAa/D,GACnC,IAAMtC,EAAU7B,IAEhB,OACE,kBAAC,IAAMmH,SAAP,KACE,kBAACgB,EAAA,EAAD,CAAatE,QAAQ,SAASxB,UAAWR,EAAQmG,aAC/C,kBAACI,EAAA,EAAD,aACA,kBAACC,EAAA,EAAD,CAAQC,MAAOnE,EAAMoE,KAAMC,SAAUrE,EAAMsE,cACzC,kBAAChF,EAAA,EAAD,CAAU6E,MAAO,IAAjB,QACA,kBAAC7E,EAAA,EAAD,CAAU6E,MAAO,IAAjB,SACA,kBAAC7E,EAAA,EAAD,CAAU6E,MAAO,IAAjB,SACA,kBAAC7E,EAAA,EAAD,CAAU6E,MAAO,IAAjB,YACA,kBAAC7E,EAAA,EAAD,CAAU6E,MAAO,IAAjB,U,IC8DKI,E,YAlFb,WAAYvE,GAAQ,IAAD,8BACjB,4CAAMA,KAQRO,YAAc,SAAAzB,GACZA,EAAM0F,iBACN1B,QAAQC,IAAIjE,EAAM2F,SATlB,EAAKL,KAAO,GACZ,EAAKlD,MAAQ,CACXwD,MAAO,IAET,EAAKC,YAAc,EAAKA,YAAYtD,KAAjB,gBANF,E,iFAejBf,KAAKqE,YAAYrE,KAAKN,MAAMoE,Q,yCAEXQ,GACbtE,KAAKN,MAAMoE,OAASQ,EAAUR,MAChC9D,KAAKqE,YAAYrE,KAAKN,MAAMoE,Q,kCAIpBA,GAAO,IAAD,OAChBpC,MAAM,kCAAoCoC,EAAO,IAAK,CACpDnC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,OAGhCC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GAEJ,EAAKM,SAAS,CAAE+B,MAAO,KAGvB,IADA,IAAIG,EAAMxC,EAAKyC,QAAQC,OAAS,GACvBxD,EAAI,EAAGA,EAAIsD,EAAKtD,IAAK,CAE5B,IAAIyD,EAAM3C,EAAKyC,QAAQvD,GAAGuD,QAAQE,IAE9BjD,EAAMiD,EAAIC,UAAU,GAAID,EAAIE,YAAY,MAExCC,EACF,4EACApD,EACA,OACE2C,EAAK,YAAO,EAAKxD,MAAMwD,OAC3BA,EAAM7C,KAAK,CACT1C,GAAI4C,EACJ9B,KAAMoC,EAAKyC,QAAQvD,GAAGuD,QAAQ7E,KAC9BC,IAAKiF,EACLH,IAAKA,IAEP,EAAKrC,SAAS,CAAE+B,MAAOA,QAG1B9B,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,qBAAsBF,Q,+BAG5C,IAAD,OACP,OACE,kBAAC,IAAMG,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,kBAAC1E,EAAA,EAAD,CAAMC,WAAS,EAACpC,QAAS,GAEtBkE,KAAKY,MAAMwD,MAAMrB,KAAI,SAAChB,EAAMiB,GAAP,OACpB,kBAAC/E,EAAA,EAAD,CAAMgF,IAAKlB,EAAKlD,GAAIV,MAAI,EAACC,GAAI,EAAGc,GAAI,GAClC,kBAAC,EAAD,CACES,KAAMoC,EAAKpC,KACXC,IAAKmC,EAAKnC,IACVf,GAAIkD,EAAKlD,GACToB,YAAa,EAAKA,wB,GA1EXS,aCmDRoE,E,YA/Cb,aAAe,IAAD,8BACZ,+CAQFd,aAAe,SAAAxF,GACbA,EAAM0F,iBACN,EAAK7B,SAAS,CACZ0C,UAAU,EACVjB,KAAMtF,EAAM2F,OAAON,SAXrB,EAAKjD,MAAQ,CACXkD,KAAM,GACNkB,SAAU,GACVD,UAAU,GALA,E,sEAkBZ,OACE,kBAAC5F,EAAA,EAAD,CAAYsB,UAAU,MAAMpB,MAAO,CAAE4F,SAAU,WAC7C,kBAACtC,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC1E,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CACEE,MAAI,EACJe,GAAI,EACJd,GAAI,GACJiB,MAAO,CAAEtD,UAAW,SAAUmJ,UAAW,QAEzC,kBAAC/F,EAAA,EAAD,CACEC,QAAQ,KACRC,MAAO,CAAEtD,UAAW,SAAUmH,aAAc,OAF9C,gBAMA,kBAAC,EAAD,CAAOc,aAAchE,KAAKgE,gBAE5B,kBAAC/F,EAAA,EAAD,CAAME,MAAI,EAACe,GAAI,EAAGd,GAAI,KAElB4B,KAAKY,MAAMmE,UAAY,kBAAC,EAAD,CAAUjB,KAAM9D,KAAKY,MAAMkD,c,GAxC7CpD,a,yBCCbjF,EAAQ0J,YAAe,CAC3BC,QAAS,CACPhJ,WAAY,CACViJ,QAAS,WAEX/B,QAAS,CACPgC,KAAM,UACNC,MAAO,UACPC,KAAM,WAERC,UAAW,CACTH,KAAM,UACNC,MAAO,UACPC,KAAM,YAGVE,WAAY,CACVC,WAAY,CAAC,kBAEfC,UAAW,CACTC,QAAS,CACPnK,KAAM,CACJoK,gBAAiB,gBAGrBC,eAAgB,CACdrK,KAAM,CACJG,QAAS,IAGbmK,UAAW,CACTC,aAAc,CACZ7J,WACE,uKAGN8J,UAAW,CACTC,OAAQ,CACNL,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,UACjBpJ,MAAO,gBAuBF0J,E,iLAbX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkB3K,MAAOA,GACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4K,OAAK,EAACC,KAAK,IAAI7F,UAAWE,IACjC,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,QAAQ7F,UAAWqE,W,GAP/BpE,aC9CEhD,QACW,cAA7B6I,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrF,MAAK,SAAAsF,GACJA,EAAaC,gBAEd7E,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM6E,c","file":"static/js/main.8075d78f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cc76aba7.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { NavLink } from \"react-router-dom\";\nimport Logo from \"../logo.png\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  navSpace: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"6%\"\n    }\n  },\n  bar: {\n    [theme.breakpoints.down(\"sm\")]: {\n      background: \"#222224\"\n    }\n  },\n  hide: {\n    marginLeft: \"1rem\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  },\n  hideSm: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  nl: {\n    color: \"#f0f0f0\",\n    marginLeft: \"15%\",\n    textDecoration: \"none\",\n    textTransform: \"uppercase\",\n    letterSpacing: theme.spacing(0.5)\n  },\n  logo: {\n    paddingTop: theme.spacing(1.375),\n    width: \"20%\",\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"40%\"\n    }\n  },\n  link: {\n    color: \"#222224\",\n    textDecoration: \"none\"\n  }\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar color=\"default\" className={classes.bar} position=\"static\">\n        <Toolbar disableGutters={true}>\n          <Grid container>\n            {/*hide menu button when large*/}\n            <Grid item={true} xs={6} className={classes.hide}>\n              <IconButton\n                aria-controls=\"menu-appbar\"\n                onClick={handleMenu}\n                edge=\"start\"\n                color=\"primary\"\n                aria-label=\"menu\"\n              >\n                <MenuIcon fontSize=\"large\" />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>\n                  <NavLink to=\"/\" className={classes.link}>\n                    PokeList\n                  </NavLink>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                  <NavLink to=\"/Type\" className={classes.link}>\n                    By Type\n                  </NavLink>\n                </MenuItem>\n              </Menu>\n            </Grid>\n            {/*hide text links when small*/}\n            <Grid item={true} md={2} xs={1} className={classes.hideSm}>\n              <Typography variant=\"h6\" className={classes.navSpace}>\n                <NavLink to=\"/\" className={classes.nl}>\n                  PokeList\n                </NavLink>\n              </Typography>\n            </Grid>\n            <Grid item={true} md={2} xs={1} className={classes.hideSm}>\n              <Typography variant=\"h6\" className={classes.navSpace}>\n                <NavLink to=\"/Type\" className={classes.nl}>\n                  By Type\n                </NavLink>\n              </Typography>\n            </Grid>\n            {/*logo*/}\n            <Grid\n              item={true}\n              md={8}\n              xs={5}\n              className={classes.navSpace}\n              style={{ padding: 0, marginLeft: 0, textAlign: \"right\" }}\n            >\n              <img src={Logo} alt=\"PokeFind\" className={classes.logo} />\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass PokeCard extends Component {\n  constructor(props) {\n    super(props);\n    this.name = \"\";\n    this.img = \"\";\n    this.id = \"\";\n    this.text = \"secondary\";\n  }\n\n  //Add items from list to a card to display to users\n  render(props) {\n    return (\n      <Card\n        elevation={0}\n        style={{ width: \"50%\" }}\n        onClick={this.props.handleClick}\n      >\n        <CardMedia\n          id={this.props.id}\n          image={this.props.img}\n          style={{ height: 96, backgroundSize: \"contain\" }}\n          title={this.props.name}\n        />\n        <CardContent>\n          <Typography\n            align=\"center\"\n            variant=\"h5\"\n            component=\"h2\"\n            color={this.props.text}\n            style={{ textTransform: \"capitalize\" }}\n          >\n            {this.props.name}\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n}\nexport default PokeCard;\n","import React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Nav from \"../nav/Navigation\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"../Card\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nclass PokeList extends Component {\n  //Create an empty array to store the pokemon in\n  constructor(props) {\n    super(props);\n    this.state = {\n      pList: []\n    };\n    this.getList = this.getList.bind(this);\n  }\n\n  componentDidMount() {\n    //Add each pokemon from the random numbers to the list\n    let check = [];\n    for (var i = 1; i < 13; i++) {\n      //Generate 12 random numbers\n      let rand = Math.floor(Math.random() * 151) + 1;\n      //check if array contains number\n      if (!check.includes(rand)) {\n        //add the numbers to an array and\n        check.push(rand);\n      } else {\n        //if it contains the number reroll\n        rand = Math.floor(Math.random() * 151) + 1;\n        //push to array\n        check.push(rand);\n      }\n    }\n    check.forEach(num => this.getList(num));\n  }\n\n  getList(num) {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + num + \"/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(poke => {\n        let pList = [...this.state.pList];\n        //Push 4 moves to array\n        let x = 0;\n        let moves = [];\n        poke.moves.forEach(move => {\n          if (!(x >= 4)) {\n            moves.push(move.move.name);\n          }\n          x = x + 1;\n        });\n        //add the id, name, and img to the list as an object\n        pList.push({\n          id: poke.id,\n          name: poke.name,\n          img: poke.sprites.front_default,\n          moves: moves\n        });\n        this.setState({ pList: pList });\n      })\n\n      .catch(error => console.log(\"Pokemon not found!\", error));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Nav />\n        <Container\n          maxWidth=\"xl\"\n          disableGutters={true}\n          style={{ margin: \"2% 8%\" }}\n        >\n          <Typography component=\"div\">\n            <Grid container>\n              {/*Loop through the list and display each object*/}\n              {this.state.pList.map((poke, index) => (\n                <Grid\n                  key={poke.id}\n                  item\n                  xs={6}\n                  md={3}\n                  style={{ marginBottom: \"3%\" }}\n                  onClick={this.handleClick}\n                >\n                  <Card name={poke.name} img={poke.img} id={poke.id} />\n                  <div id={poke.id}>\n                    <List>\n                      <ListItem>\n                        <ListItemText primary={poke.moves[0]} />\n                      </ListItem>\n                      <ListItem>\n                        <ListItemText primary={poke.moves[1] || \"???\"} />\n                      </ListItem>\n                      <ListItem>\n                        <ListItemText primary={poke.moves[2] || \"???\"} />\n                      </ListItem>\n                      <ListItem>\n                        <ListItemText primary={poke.moves[3] || \"???\"} />\n                      </ListItem>\n                    </List>\n                  </div>\n                </Grid>\n              ))}\n            </Grid>\n          </Typography>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\nexport default PokeList;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nexport default function SimpleSelect(props) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <FormControl variant=\"filled\" className={classes.formControl}>\n        <InputLabel>Type</InputLabel>\n        <Select value={props.type} onChange={props.handleChange}>\n          <MenuItem value={10}>Fire</MenuItem>\n          <MenuItem value={11}>Water</MenuItem>\n          <MenuItem value={12}>Grass</MenuItem>\n          <MenuItem value={13}>Electric</MenuItem>\n          <MenuItem value={15}>Ice</MenuItem>\n        </Select>\n      </FormControl>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"./Card\";\n\nclass TypeList extends Component {\n  constructor(props) {\n    super(props);\n    this.type = \"\";\n    this.state = {\n      tList: []\n    };\n    this.getTypeList = this.getTypeList.bind(this);\n  }\n\n  handleClick = event => {\n    event.preventDefault();\n    console.log(event.target);\n  };\n\n  componentDidMount() {\n    this.getTypeList(this.props.type);\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.type !== prevProps.type) {\n      this.getTypeList(this.props.type);\n    }\n  }\n\n  getTypeList(type) {\n    fetch(\"https://pokeapi.co/api/v2/type/\" + type + \"/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(poke => {\n        //clear tList for new selections\n        this.setState({ tList: [] });\n        //cut the last 10 pokemon off because some did not have images\n        let len = poke.pokemon.length - 14;\n        for (let i = 0; i < len; i++) {\n          //get the url of each pokemon\n          let url = poke.pokemon[i].pokemon.url;\n          //remove the number from the end of the url\n          let num = url.substring(34, url.lastIndexOf(\"/\"));\n          //take the pokemon id and get the default image\n          let imgUrl =\n            \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\n            num +\n            \".png\";\n          let tList = [...this.state.tList];\n          tList.push({\n            id: num,\n            name: poke.pokemon[i].pokemon.name,\n            img: imgUrl,\n            url: url\n          });\n          this.setState({ tList: tList });\n        }\n      })\n      .catch(error => console.log(\"Pokemon not found!\", error));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Grid container spacing={3}>\n          {/*Create Modal to show information*/}\n          {this.state.tList.map((poke, index) => (\n            <Grid key={poke.id} item xs={6} md={4}>\n              <Card\n                name={poke.name}\n                img={poke.img}\n                id={poke.id}\n                handleClick={this.handleClick}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\nexport default TypeList;\n","import React, { Component } from \"react\";\nimport Input from \"../TypeSearch\";\nimport TypeList from \"../TypeList\";\nimport Nav from \"../nav/Navigation\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass Type extends Component {\n  constructor() {\n    super();\n    this.state = {\n      type: \"\",\n      typeName: \"\",\n      isHidden: true\n    };\n  }\n  //When type is selected call the api\n  handleChange = event => {\n    event.preventDefault();\n    this.setState({\n      isHidden: false,\n      type: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      <Typography component=\"div\" style={{ overflow: \"scroll\" }}>\n        <CssBaseline />\n        <Nav />\n        <Grid container>\n          <Grid\n            item\n            md={4}\n            xs={12}\n            style={{ textAlign: \"center\", marginTop: \"15%\" }}\n          >\n            <Typography\n              variant=\"h2\"\n              style={{ textAlign: \"center\", marginBottom: \"5%\" }}\n            >\n              Find By Type\n            </Typography>\n            <Input handleChange={this.handleChange} />\n          </Grid>\n          <Grid item md={8} xs={12}>\n            {/*If the state is currently hidden then load the TypeList component*/}\n            {!this.state.isHidden && <TypeList type={this.state.type} />}\n          </Grid>\n        </Grid>\n      </Typography>\n    );\n  }\n}\n\nexport default Type;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n//Navigation\nimport PokeList from \"./components/pages/PokeList\";\nimport Type from \"./components/pages/Type\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\n\n//Theme\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#ee1515\"\n    },\n    primary: {\n      main: \"#f0f0f0\",\n      light: \"#f3f3f3\",\n      dark: \"#a8a8a8\"\n    },\n    secondary: {\n      main: \"#222224\",\n      light: \"#4e4e4f\",\n      dark: \"#171719\"\n    }\n  },\n  typography: {\n    fontFamily: ['\"Nova Square\"']\n  },\n  overrides: {\n    MuiCard: {\n      root: {\n        backgroundColor: \"transparent\"\n      }\n    },\n    MuiCardContent: {\n      root: {\n        padding: 0\n      }\n    },\n    MuiAppBar: {\n      colorDefault: {\n        background:\n          \"linear-gradient(90deg, rgba(238,21,21,1) 0%, rgba(238,21,21,1) 40%, rgba(34,34,36,1) 40%, rgba(34,34,36,1) 63%, rgba(240,240,240,1) 63%, rgba(240,240,240,1) 100%)\"\n      }\n    },\n    MuiSelect: {\n      filled: {\n        backgroundColor: \"#f0f0f0\",\n        \"&:focus\": {\n          backgroundColor: \"#f0f0f0\",\n          color: \"#222224\"\n        }\n      }\n    }\n    //End overrides\n  }\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <MuiThemeProvider theme={theme}>\n          <Switch>\n            <Route exact path=\"/\" component={PokeList} />\n            <Route exact path=\"/Type\" component={Type} />\n          </Switch>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}