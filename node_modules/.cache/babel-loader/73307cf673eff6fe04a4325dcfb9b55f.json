{"ast":null,"code":"var _jsxFileName = \"/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/src/components/TypeList.js\";\nimport React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"./Card\";\n\nclass TypeList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = event => {\n      event.preventDefault();\n      console.log(event.target);\n    };\n\n    this.type = \"\";\n    this.state = {\n      tList: []\n    };\n    this.getTypeList = this.getTypeList.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTypeList(this.props.type);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.type !== prevProps.type) {\n      this.getTypeList(this.props.type);\n    }\n  }\n\n  getTypeList(type) {\n    fetch(\"https://pokeapi.co/api/v2/type/\" + type + \"/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(poke => {\n      //clear tList for new selections\n      this.setState({\n        tList: []\n      }); //cut the last 10 pokemon off because some did not have images\n\n      let len = poke.pokemon.length - 14;\n\n      for (let i = 0; i < len; i++) {\n        //get the url of each pokemon\n        let url = poke.pokemon[i].pokemon.url; //remove the number from the end of the url\n\n        let num = url.substring(34, url.lastIndexOf(\"/\")); //take the pokemon id and get the default image\n\n        let imgUrl = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + num + \".png\";\n        let tList = [...this.state.tList];\n        tList.push({\n          id: num,\n          name: poke.pokemon[i].pokemon.name,\n          img: imgUrl,\n          url: url\n        });\n        this.setState({\n          tList: tList\n        });\n      }\n    }).catch(error => console.log(\"Pokemon not found!\", error));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.tList.map((poke, index) => React.createElement(Grid, {\n      key: poke.id,\n      item: true,\n      xs: 6,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Card, {\n      name: poke.name,\n      img: poke.img,\n      id: poke.id,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default TypeList;","map":{"version":3,"sources":["/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/src/components/TypeList.js"],"names":["React","Component","CssBaseline","Grid","Card","TypeList","constructor","props","handleClick","event","preventDefault","console","log","target","type","state","tList","getTypeList","bind","componentDidMount","componentDidUpdate","prevProps","fetch","headers","then","response","json","poke","setState","len","pokemon","length","i","url","num","substring","lastIndexOf","imgUrl","push","id","name","img","catch","error","render","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"./Card\";\n\nclass TypeList extends Component {\n  constructor(props) {\n    super(props);\n    this.type = \"\";\n    this.state = {\n      tList: []\n    };\n    this.getTypeList = this.getTypeList.bind(this);\n  }\n\n  handleClick = event => {\n    event.preventDefault();\n    console.log(event.target);\n  };\n\n  componentDidMount() {\n    this.getTypeList(this.props.type);\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.type !== prevProps.type) {\n      this.getTypeList(this.props.type);\n    }\n  }\n\n  getTypeList(type) {\n    fetch(\"https://pokeapi.co/api/v2/type/\" + type + \"/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(poke => {\n        //clear tList for new selections\n        this.setState({ tList: [] });\n        //cut the last 10 pokemon off because some did not have images\n        let len = poke.pokemon.length - 14;\n        for (let i = 0; i < len; i++) {\n          //get the url of each pokemon\n          let url = poke.pokemon[i].pokemon.url;\n          //remove the number from the end of the url\n          let num = url.substring(34, url.lastIndexOf(\"/\"));\n          //take the pokemon id and get the default image\n          let imgUrl =\n            \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\n            num +\n            \".png\";\n          let tList = [...this.state.tList];\n          tList.push({\n            id: num,\n            name: poke.pokemon[i].pokemon.name,\n            img: imgUrl,\n            url: url\n          });\n          this.setState({ tList: tList });\n        }\n      })\n      .catch(error => console.log(\"Pokemon not found!\", error));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Grid container spacing={3}>\n          {/*Create Modal to show information*/}\n          {this.state.tList.map((poke, index) => (\n            <Grid key={poke.id} item xs={6} md={4}>\n              <Card\n                name={poke.name}\n                img={poke.img}\n                id={poke.id}\n                handleClick={this.handleClick}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\nexport default TypeList;\n"]},"metadata":{},"sourceType":"module"}