{"ast":null,"code":"var _jsxFileName = \"/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/src/components/pages/PokeList.js\";\nimport React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Nav from \"../nav/Navigation\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"../Card\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass PokeList extends Component {\n  //Create an empty array to store the pokemon in\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null,\n        isOpen: false\n      });\n    };\n\n    this.handleClick = event => {\n      console.log(this.state);\n      this.setState({\n        anchorEl: event.currentTarget,\n        isOpen: true\n      });\n    };\n\n    this.state = {\n      anchorEl: null,\n      isOpen: false,\n      pList: []\n    };\n    this.getList = this.getList.bind(this);\n  }\n\n  componentDidMount() {\n    //Add each pokemon from the random numbers to the list\n    let check = [];\n\n    for (var i = 1; i < 13; i++) {\n      //Generate 12 random numbers\n      let rand = Math.floor(Math.random() * 151) + 1; //check if array contains number\n\n      if (!check.includes(rand)) {\n        //add the numbers to an array and\n        check.push(rand);\n      } else {\n        //if it contains the number reroll\n        rand = Math.floor(Math.random() * 151) + 1; //push to array\n\n        check.push(rand);\n      }\n    }\n\n    check.forEach(num => this.getList(num));\n  }\n\n  getList(num) {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + num + \"/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(poke => {\n      let pList = [...this.state.pList]; //add the id, name, and img to the list as an object\n\n      pList.push({\n        id: poke.id,\n        name: poke.name,\n        img: poke.sprites.front_default,\n        moves: poke.moves\n      });\n      this.setState({\n        pList: pList\n      });\n    }).catch(error => console.log(\"Pokemon not found!\", error));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Container, {\n      maxWidth: \"xl\",\n      disableGutters: true,\n      style: {\n        margin: \"2% 8%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.pList.map((poke, index) => React.createElement(Grid, {\n      key: poke.id,\n      item: true,\n      xs: 6,\n      md: 3,\n      style: {\n        marginBottom: \"3%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Card, {\n      name: poke.name,\n      img: poke.img,\n      id: poke.id,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      className: this.state.anchorEl,\n      keepMounted: true,\n      open: this.state.isOpen,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, poke.moves[0].move.name), React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"move\"), React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"move\"), React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"move\"))))))));\n  }\n\n}\n\nexport default PokeList;","map":{"version":3,"sources":["/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/src/components/pages/PokeList.js"],"names":["React","Component","CssBaseline","Typography","Container","Nav","Grid","Card","Menu","MenuItem","PokeList","constructor","props","handleClose","setState","anchorEl","isOpen","handleClick","event","console","log","state","currentTarget","pList","getList","bind","componentDidMount","check","i","rand","Math","floor","random","includes","push","forEach","num","fetch","headers","then","response","json","poke","id","name","img","sprites","front_default","moves","catch","error","render","margin","map","index","marginBottom","move"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Nav from \"../nav/Navigation\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"../Card\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass PokeList extends Component {\n  //Create an empty array to store the pokemon in\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      isOpen: false,\n      pList: []\n    };\n    this.getList = this.getList.bind(this);\n  }\n\n  handleClose = () => {\n    this.setState({\n      anchorEl: null,\n      isOpen: false\n    });\n  };\n  //When clicked anchor menu on target show 4 moves\n  handleClick = event => {\n    console.log(this.state);\n    this.setState({\n      anchorEl: event.currentTarget,\n      isOpen: true\n    });\n  };\n\n  componentDidMount() {\n    //Add each pokemon from the random numbers to the list\n    let check = [];\n    for (var i = 1; i < 13; i++) {\n      //Generate 12 random numbers\n      let rand = Math.floor(Math.random() * 151) + 1;\n      //check if array contains number\n      if (!check.includes(rand)) {\n        //add the numbers to an array and\n        check.push(rand);\n      } else {\n        //if it contains the number reroll\n        rand = Math.floor(Math.random() * 151) + 1;\n        //push to array\n        check.push(rand);\n      }\n    }\n    check.forEach(num => this.getList(num));\n  }\n\n  getList(num) {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + num + \"/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(poke => {\n        let pList = [...this.state.pList];\n        //add the id, name, and img to the list as an object\n        pList.push({\n          id: poke.id,\n          name: poke.name,\n          img: poke.sprites.front_default,\n          moves: poke.moves\n        });\n        this.setState({ pList: pList });\n      })\n      .catch(error => console.log(\"Pokemon not found!\", error));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Nav />\n        <Container\n          maxWidth=\"xl\"\n          disableGutters={true}\n          style={{ margin: \"2% 8%\" }}\n        >\n          <Typography component=\"div\">\n            <Grid container>\n              {/*Loop through the list and display each object*/}\n              {this.state.pList.map((poke, index) => (\n                <Grid\n                  key={poke.id}\n                  item\n                  xs={6}\n                  md={3}\n                  style={{ marginBottom: \"3%\" }}\n                >\n                  <Card\n                    name={poke.name}\n                    img={poke.img}\n                    id={poke.id}\n                    onClick={this.handleClick}\n                  />\n                  <Menu\n                    className={this.state.anchorEl}\n                    keepMounted\n                    open={this.state.isOpen}\n                    onClose={this.handleClose}\n                  >\n                    <MenuItem onClick={this.handleClose}>\n                      {poke.moves[0].move.name}\n                    </MenuItem>\n                    <MenuItem onClick={this.handleClose}>move</MenuItem>\n                    <MenuItem onClick={this.handleClose}>move</MenuItem>\n                    <MenuItem onClick={this.handleClose}>move</MenuItem>\n                  </Menu>\n                </Grid>\n              ))}\n            </Grid>\n          </Typography>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\nexport default PokeList;\n"]},"metadata":{},"sourceType":"module"}