{"ast":null,"code":"var _jsxFileName = \"/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/src/components/TypeList.js\";\nimport React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"../Card\";\n\nclass TypeList extends Component {\n  constructor(props) {\n    super(props);\n    this.type = \"\";\n    this.state = {\n      tList: []\n    };\n    this.getTypeList = this.getTypeList.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTypeList(this.props.type);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.type !== prevProps.type) {\n      this.getTypeList(this.props.type);\n    }\n  }\n\n  getTypeList(type) {\n    fetch(\"https://pokeapi.co/api/v2/type/\" + type + \"/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(poke => {\n      this.setState({\n        tList: []\n      });\n      let len = poke.pokemon.length - 10;\n\n      for (let i = 0; i < len; i++) {\n        console.log(poke.pokemon[i]);\n        let url = poke.pokemon[i].pokemon.url;\n        let num = url.substring(34, url.lastIndexOf(\"/\"));\n        let imgUrl = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + num + \".png\";\n        let tList = [...this.state.tList];\n        tList.push({\n          id: num,\n          name: poke.pokemon[i].pokemon.name,\n          img: imgUrl\n        });\n        this.setState({\n          tList: tList\n        });\n      }\n    }).catch(error => console.log(\"Pokemon not found!\", error));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Container, {\n      disableGutters: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.tList.map((poke, index) => React.createElement(Grid, {\n      key: poke.id,\n      item: true,\n      xs: 6,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Card, {\n      name: poke.name,\n      img: poke.img,\n      id: poke.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default TypeList;","map":{"version":3,"sources":["/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/src/components/TypeList.js"],"names":["React","Component","CssBaseline","Typography","Container","Grid","Card","TypeList","constructor","props","type","state","tList","getTypeList","bind","componentDidMount","componentDidUpdate","prevProps","fetch","headers","then","response","json","poke","setState","len","pokemon","length","i","console","log","url","num","substring","lastIndexOf","imgUrl","push","id","name","img","catch","error","render","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"../Card\";\n\nclass TypeList extends Component {\n  constructor(props) {\n    super(props);\n    this.type = \"\";\n    this.state = {\n      tList: []\n    };\n    this.getTypeList = this.getTypeList.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTypeList(this.props.type);\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.type !== prevProps.type) {\n      this.getTypeList(this.props.type);\n    }\n  }\n\n  getTypeList(type) {\n    fetch(\"https://pokeapi.co/api/v2/type/\" + type + \"/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(poke => {\n        this.setState({ tList: [] });\n\n        let len = poke.pokemon.length - 10;\n        for (let i = 0; i < len; i++) {\n          console.log(poke.pokemon[i]);\n          let url = poke.pokemon[i].pokemon.url;\n          let num = url.substring(34, url.lastIndexOf(\"/\"));\n          let imgUrl =\n            \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\n            num +\n            \".png\";\n          let tList = [...this.state.tList];\n          tList.push({\n            id: num,\n            name: poke.pokemon[i].pokemon.name,\n            img: imgUrl\n          });\n          this.setState({ tList: tList });\n        }\n      })\n      .catch(error => console.log(\"Pokemon not found!\", error));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container disableGutters={true}>\n          <Typography component=\"div\">\n            <Grid container spacing={3}>\n              {/*Create Modal to show information*/}\n              {this.state.tList.map((poke, index) => (\n                <Grid key={poke.id} item xs={6} md={4}>\n                  <Card name={poke.name} img={poke.img} id={poke.id} />\n                </Grid>\n              ))}\n            </Grid>\n          </Typography>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\nexport default TypeList;\n"]},"metadata":{},"sourceType":"module"}