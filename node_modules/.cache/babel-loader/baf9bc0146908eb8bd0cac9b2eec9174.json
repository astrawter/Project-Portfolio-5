{"ast":null,"code":"import _toConsumableArray from\"/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import CssBaseline from\"@material-ui/core/CssBaseline\";import Grid from\"@material-ui/core/Grid\";import Card from\"./Card\";var TypeList=/*#__PURE__*/function(_Component){_inherits(TypeList,_Component);function TypeList(props){var _this;_classCallCheck(this,TypeList);_this=_possibleConstructorReturn(this,_getPrototypeOf(TypeList).call(this,props));_this.handleClick=function(event){event.preventDefault();console.log(event.target);};_this.type=\"\";_this.state={tList:[]};_this.getTypeList=_this.getTypeList.bind(_assertThisInitialized(_this));return _this;}_createClass(TypeList,[{key:\"componentDidMount\",value:function componentDidMount(){this.getTypeList(this.props.type);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.type!==prevProps.type){this.getTypeList(this.props.type);}}},{key:\"getTypeList\",value:function getTypeList(type){var _this2=this;fetch(\"https://pokeapi.co/api/v2/type/\"+type+\"/\",{headers:{\"Content-Type\":\"application/json\",\"Access-Control-Allow-Origin\":\"*\"}}).then(function(response){return response.json();}).then(function(poke){//clear tList for new selections\n_this2.setState({tList:[]});//cut the last 10 pokemon off because some did not have images\nvar len=poke.pokemon.length-14;for(var i=0;i<len;i++){//get the url of each pokemon\nvar url=poke.pokemon[i].pokemon.url;//remove the number from the end of the url\nvar num=url.substring(34,url.lastIndexOf(\"/\"));//take the pokemon id and get the default image\nvar imgUrl=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"+num+\".png\";var tList=_toConsumableArray(_this2.state.tList);tList.push({id:num,name:poke.pokemon[i].pokemon.name,img:imgUrl,url:url});_this2.setState({tList:tList});}}).catch(function(error){return console.log(\"Pokemon not found!\",error);});}},{key:\"render\",value:function render(){var _this3=this;return React.createElement(React.Fragment,null,React.createElement(CssBaseline,null),React.createElement(Grid,{container:true,spacing:3},this.state.tList.map(function(poke,index){return React.createElement(Grid,{key:poke.id,item:true,xs:6,md:4},React.createElement(Card,{name:poke.name,img:poke.img,id:poke.id,handleClick:_this3.handleClick}));})));}}]);return TypeList;}(Component);export default TypeList;","map":{"version":3,"sources":["/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/src/components/TypeList.js"],"names":["React","Component","CssBaseline","Grid","Card","TypeList","props","handleClick","event","preventDefault","console","log","target","type","state","tList","getTypeList","bind","prevProps","fetch","headers","then","response","json","poke","setState","len","pokemon","length","i","url","num","substring","lastIndexOf","imgUrl","push","id","name","img","catch","error","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"./Card\";\n\nclass TypeList extends Component {\n  constructor(props) {\n    super(props);\n    this.type = \"\";\n    this.state = {\n      tList: []\n    };\n    this.getTypeList = this.getTypeList.bind(this);\n  }\n\n  handleClick = event => {\n    event.preventDefault();\n    console.log(event.target);\n  };\n\n  componentDidMount() {\n    this.getTypeList(this.props.type);\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.type !== prevProps.type) {\n      this.getTypeList(this.props.type);\n    }\n  }\n\n  getTypeList(type) {\n    fetch(\"https://pokeapi.co/api/v2/type/\" + type + \"/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(poke => {\n        //clear tList for new selections\n        this.setState({ tList: [] });\n        //cut the last 10 pokemon off because some did not have images\n        let len = poke.pokemon.length - 14;\n        for (let i = 0; i < len; i++) {\n          //get the url of each pokemon\n          let url = poke.pokemon[i].pokemon.url;\n          //remove the number from the end of the url\n          let num = url.substring(34, url.lastIndexOf(\"/\"));\n          //take the pokemon id and get the default image\n          let imgUrl =\n            \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\n            num +\n            \".png\";\n          let tList = [...this.state.tList];\n          tList.push({\n            id: num,\n            name: poke.pokemon[i].pokemon.name,\n            img: imgUrl,\n            url: url\n          });\n          this.setState({ tList: tList });\n        }\n      })\n      .catch(error => console.log(\"Pokemon not found!\", error));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Grid container spacing={3}>\n          {/*Create Modal to show information*/}\n          {this.state.tList.map((poke, index) => (\n            <Grid key={poke.id} item xs={6} md={4}>\n              <Card\n                name={poke.name}\n                img={poke.img}\n                id={poke.id}\n                handleClick={this.handleClick}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\nexport default TypeList;\n"]},"metadata":{},"sourceType":"module"}