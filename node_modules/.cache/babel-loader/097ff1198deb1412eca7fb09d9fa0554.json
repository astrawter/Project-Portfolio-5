{"ast":null,"code":"var _jsxFileName = \"/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/src/components/pages/Type.js\";\nimport React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Nav from '../Navigation';\nimport Grid from '@material-ui/core/Grid';\n\nclass Type extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tList: []\n    };\n    this.getTypeList = this.getTypeList.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTypeList(10);\n  }\n\n  getTypeList(type) {\n    fetch('https://pokeapi.co/api/v2/type/' + type + '/', {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(poke => {\n      let len = poke.pokemon.length - 10;\n\n      for (let i = 0; i < len; i++) {\n        console.log(poke.pokemon[i]);\n        let url = poke.pokemon[i].pokemon.url;\n        let num = url.substring(34, url.lastIndexOf(\"/\"));\n        let imgUrl = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + num + \".png\";\n        let tList = [...this.state.tList];\n        tList.push({\n          id: num,\n          name: poke.pokemon[i].pokemon.name,\n          img: imgUrl\n        });\n        this.setState({\n          tList: tList\n        });\n      }\n    }).catch(error => console.log('Pokemon not found!', error));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Container, {\n      maxWidth: \"xl\",\n      disableGutters: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"div\",\n      style: {\n        backgroundColor: '#cc0000',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.tList.map((poke, index) => React.createElement(Grid, {\n      key: poke.id,\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: poke.img,\n      alt: poke.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, poke.name)))))));\n  }\n\n}\n\nexport default Type;","map":{"version":3,"sources":["/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/src/components/pages/Type.js"],"names":["React","Component","CssBaseline","Typography","Container","Nav","Grid","Type","constructor","props","state","tList","getTypeList","bind","componentDidMount","type","fetch","headers","then","response","json","poke","len","pokemon","length","i","console","log","url","num","substring","lastIndexOf","imgUrl","push","id","name","img","setState","catch","error","render","backgroundColor","height","map","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Nav from '../Navigation'\nimport Grid from '@material-ui/core/Grid';\n\nclass Type extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      tList: []\n    }\n    this.getTypeList = this.getTypeList.bind(this);\n  }\n\n  componentDidMount(){\n    this.getTypeList(10)\n}\n\n  getTypeList(type) {\n    fetch('https://pokeapi.co/api/v2/type/'+type+'/', {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n  })\n    .then(response => {return response.json()})\n    .then(poke => {\n      let len = poke.pokemon.length-10\n      for(let i = 0; i < len; i++) {\n        console.log(poke.pokemon[i]);\n        let url = poke.pokemon[i].pokemon.url\n        let num = url.substring(34, url.lastIndexOf(\"/\"))\n        let imgUrl = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"+num+\".png\"\n        let tList = [...this.state.tList]\n        tList.push({\n          id: num,\n          name: poke.pokemon[i].pokemon.name,\n          img: imgUrl\n        })\n        this.setState({tList: tList})\n      }\n    })\n  .catch(error => console.log('Pokemon not found!', error))\n  }\n\n  render(){\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Nav/>\n      <Container maxWidth=\"xl\" disableGutters=\"true\">\n        <Typography component=\"div\" style={{ backgroundColor: '#cc0000', height: '100vh' }}>\n          <Grid container spacing={3}>\n        {/*Create Modal to show information*/}\n        {this.state.tList.map((poke, index) => (\n          <Grid key={poke.id} item xs={4}>\n          <img src ={poke.img} alt={poke.name} />\n         <p>{poke.name}</p>\n      </Grid>\n    ))}\n  </Grid>\n        </Typography>\n      </Container>\n    </React.Fragment>\n  );\n}\n}\nexport default Type;\n"]},"metadata":{},"sourceType":"module"}