{"ast":null,"code":"var _jsxFileName = \"/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/src/components/pages/PokeList.js\";\nimport React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Nav from \"../nav/Navigation\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"../Card\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nclass PokeList extends Component {\n  //Create an empty array to store the pokemon in\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null,\n        isOpen: false\n      });\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      console.log(\"Clicked\");\n      this.setState({\n        anchorEl: event.currentTarget,\n        isOpen: true\n      });\n    };\n\n    this.state = {\n      anchorEl: null,\n      isOpen: false,\n      pList: []\n    };\n    this.getList = this.getList.bind(this);\n  }\n\n  componentDidMount() {\n    //Add each pokemon from the random numbers to the list\n    let check = [];\n\n    for (var i = 1; i < 13; i++) {\n      //Generate 12 random numbers\n      let rand = Math.floor(Math.random() * 151) + 1; //check if array contains number\n\n      if (!check.includes(rand)) {\n        //add the numbers to an array and\n        check.push(rand);\n      } else {\n        //if it contains the number reroll\n        rand = Math.floor(Math.random() * 151) + 1; //push to array\n\n        check.push(rand);\n      }\n    }\n\n    check.forEach(num => this.getList(num));\n  }\n\n  getList(num) {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + num + \"/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(poke => {\n      let pList = [...this.state.pList]; //add the id, name, and img to the list as an object\n\n      pList.push({\n        id: poke.id,\n        name: poke.name,\n        img: poke.sprites.front_default,\n        moves: poke.moves\n      });\n      this.setState({\n        pList: pList\n      });\n    }).catch(error => console.log(\"Pokemon not found!\", error));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Container, {\n      maxWidth: \"xl\",\n      disableGutters: true,\n      style: {\n        margin: \"2% 8%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.pList.map((poke, index) => React.createElement(Grid, {\n      key: poke.id,\n      item: true,\n      xs: 6,\n      md: 3,\n      style: {\n        marginBottom: \"3%\"\n      },\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Card, {\n      name: poke.name,\n      img: poke.img,\n      id: poke.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      open: this.state.isOpen,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: \"2px solid #000\",\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, poke.moves[0].move.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, poke.moves[1].move.name || \"???\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, poke.moves[2].move.name || \"???\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, poke.moves[3].move.name || \"???\")))))))));\n  }\n\n}\n\nexport default PokeList;","map":{"version":3,"sources":["/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/src/components/pages/PokeList.js"],"names":["React","Component","CssBaseline","Typography","Container","Nav","Grid","Card","Menu","MenuItem","Modal","makeStyles","rand","Math","round","random","getModalStyle","top","left","transform","PokeList","constructor","props","handleClose","setState","anchorEl","isOpen","handleClick","event","preventDefault","console","log","currentTarget","state","pList","getList","bind","componentDidMount","check","i","floor","includes","push","forEach","num","fetch","headers","then","response","json","poke","id","name","img","sprites","front_default","moves","catch","error","render","margin","map","index","marginBottom","position","width","backgroundColor","theme","palette","background","paper","border","boxShadow","shadows","padding","spacing","move"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Nav from \"../nav/Navigation\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"../Card\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nclass PokeList extends Component {\n  //Create an empty array to store the pokemon in\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      isOpen: false,\n      pList: []\n    };\n    this.getList = this.getList.bind(this);\n  }\n\n  handleClose = () => {\n    this.setState({\n      anchorEl: null,\n      isOpen: false\n    });\n  };\n\n  //When clicked anchor menu on target show 4 moves\n  handleClick = event => {\n    event.preventDefault();\n    console.log(\"Clicked\");\n    this.setState({\n      anchorEl: event.currentTarget,\n      isOpen: true\n    });\n  };\n\n  componentDidMount() {\n    //Add each pokemon from the random numbers to the list\n    let check = [];\n    for (var i = 1; i < 13; i++) {\n      //Generate 12 random numbers\n      let rand = Math.floor(Math.random() * 151) + 1;\n      //check if array contains number\n      if (!check.includes(rand)) {\n        //add the numbers to an array and\n        check.push(rand);\n      } else {\n        //if it contains the number reroll\n        rand = Math.floor(Math.random() * 151) + 1;\n        //push to array\n        check.push(rand);\n      }\n    }\n    check.forEach(num => this.getList(num));\n  }\n\n  getList(num) {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + num + \"/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(poke => {\n        let pList = [...this.state.pList];\n        //add the id, name, and img to the list as an object\n        pList.push({\n          id: poke.id,\n          name: poke.name,\n          img: poke.sprites.front_default,\n          moves: poke.moves\n        });\n        this.setState({ pList: pList });\n      })\n      .catch(error => console.log(\"Pokemon not found!\", error));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Nav />\n        <Container\n          maxWidth=\"xl\"\n          disableGutters={true}\n          style={{ margin: \"2% 8%\" }}\n        >\n          <Typography component=\"div\">\n            <Grid container>\n              {/*Loop through the list and display each object*/}\n              {this.state.pList.map((poke, index) => (\n                <Grid\n                  key={poke.id}\n                  item\n                  xs={6}\n                  md={3}\n                  style={{ marginBottom: \"3%\" }}\n                  onClick={this.handleClick}\n                >\n                  <Card name={poke.name} img={poke.img} id={poke.id} />\n                  <Modal open={this.state.isOpen} onClose={this.handleClose}>\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        width: 400,\n                        backgroundColor: theme.palette.background.paper,\n                        border: \"2px solid #000\",\n                        boxShadow: theme.shadows[5],\n                        padding: theme.spacing(2, 4, 3)\n                      }}\n                    >\n                      <p>{poke.moves[0].move.name}</p>\n                      <p>{poke.moves[1].move.name || \"???\"}</p>\n                      <p>{poke.moves[2].move.name || \"???\"}</p>\n                      <p>{poke.moves[3].move.name || \"???\"}</p>\n                    </div>\n                  </Modal>\n                </Grid>\n              ))}\n            </Grid>\n          </Typography>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\nexport default PokeList;\n"]},"metadata":{},"sourceType":"module"}