{"ast":null,"code":"var _jsxFileName = \"/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/src/components/pages/PokeList.js\";\nimport React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Nav from \"../nav/Navigation\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"../Card\";\nimport Menu from \"@material-ui/core/Menu\";\nimport p from \"@material-ui/core/p\";\nimport Modal from \"@material-ui/core/Modal\";\nconst body = React.createElement(\"div\", {\n  style: modalStyle,\n  className: classes.paper,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, poke.moves[0].move.name), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, poke.moves[1].move.name || \"???\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, poke.moves[2].move.name || \"???\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, poke.moves[3].move.name || \"???\"), React.createElement(SimpleModal, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}));\n\nclass PokeList extends Component {\n  //Create an empty array to store the pokemon in\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null,\n        isOpen: false\n      });\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      console.log(\"Clicked\");\n      this.setState({\n        anchorEl: event.currentTarget,\n        isOpen: true\n      });\n    };\n\n    this.state = {\n      anchorEl: null,\n      isOpen: false,\n      pList: []\n    };\n    this.getList = this.getList.bind(this);\n  }\n\n  componentDidMount() {\n    //Add each pokemon from the random numbers to the list\n    let check = [];\n\n    for (var i = 1; i < 13; i++) {\n      //Generate 12 random numbers\n      let rand = Math.floor(Math.random() * 151) + 1; //check if array contains number\n\n      if (!check.includes(rand)) {\n        //add the numbers to an array and\n        check.push(rand);\n      } else {\n        //if it contains the number reroll\n        rand = Math.floor(Math.random() * 151) + 1; //push to array\n\n        check.push(rand);\n      }\n    }\n\n    check.forEach(num => this.getList(num));\n  }\n\n  getList(num) {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + num + \"/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(poke => {\n      let pList = [...this.state.pList]; //add the id, name, and img to the list as an object\n\n      pList.push({\n        id: poke.id,\n        name: poke.name,\n        img: poke.sprites.front_default,\n        moves: poke.moves\n      });\n      this.setState({\n        pList: pList\n      });\n    }).catch(error => console.log(\"Pokemon not found!\", error));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Container, {\n      maxWidth: \"xl\",\n      disableGutters: true,\n      style: {\n        margin: \"2% 8%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.pList.map((poke, index) => React.createElement(Grid, {\n      key: poke.id,\n      item: true,\n      xs: 6,\n      md: 3,\n      style: {\n        marginBottom: \"3%\"\n      },\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Card, {\n      name: poke.name,\n      img: poke.img,\n      id: poke.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      open: this.state.isOpen,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, body)))))));\n  }\n\n}\n\nexport default PokeList;","map":{"version":3,"sources":["/Users/lexx/Desktop/School/GitHub/Project-Portfolio-5/src/components/pages/PokeList.js"],"names":["React","Component","CssBaseline","Typography","Container","Nav","Grid","Card","Menu","p","Modal","body","modalStyle","classes","paper","poke","moves","move","name","PokeList","constructor","props","handleClose","setState","anchorEl","isOpen","handleClick","event","preventDefault","console","log","currentTarget","state","pList","getList","bind","componentDidMount","check","i","rand","Math","floor","random","includes","push","forEach","num","fetch","headers","then","response","json","id","img","sprites","front_default","catch","error","render","margin","map","index","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Nav from \"../nav/Navigation\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"../Card\";\nimport Menu from \"@material-ui/core/Menu\";\nimport p from \"@material-ui/core/p\";\nimport Modal from \"@material-ui/core/Modal\";\n\nconst body = (\n  <div style={modalStyle} className={classes.paper}>\n    <p>{poke.moves[0].move.name}</p>\n    <p>{poke.moves[1].move.name || \"???\"}</p>\n    <p>{poke.moves[2].move.name || \"???\"}</p>\n    <p>{poke.moves[3].move.name || \"???\"}</p>\n    <SimpleModal />\n  </div>\n);\n\nclass PokeList extends Component {\n  //Create an empty array to store the pokemon in\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      isOpen: false,\n      pList: []\n    };\n    this.getList = this.getList.bind(this);\n  }\n\n  handleClose = () => {\n    this.setState({\n      anchorEl: null,\n      isOpen: false\n    });\n  };\n\n  //When clicked anchor menu on target show 4 moves\n  handleClick = event => {\n    event.preventDefault();\n    console.log(\"Clicked\");\n    this.setState({\n      anchorEl: event.currentTarget,\n      isOpen: true\n    });\n  };\n\n  componentDidMount() {\n    //Add each pokemon from the random numbers to the list\n    let check = [];\n    for (var i = 1; i < 13; i++) {\n      //Generate 12 random numbers\n      let rand = Math.floor(Math.random() * 151) + 1;\n      //check if array contains number\n      if (!check.includes(rand)) {\n        //add the numbers to an array and\n        check.push(rand);\n      } else {\n        //if it contains the number reroll\n        rand = Math.floor(Math.random() * 151) + 1;\n        //push to array\n        check.push(rand);\n      }\n    }\n    check.forEach(num => this.getList(num));\n  }\n\n  getList(num) {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + num + \"/\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(poke => {\n        let pList = [...this.state.pList];\n        //add the id, name, and img to the list as an object\n        pList.push({\n          id: poke.id,\n          name: poke.name,\n          img: poke.sprites.front_default,\n          moves: poke.moves\n        });\n        this.setState({ pList: pList });\n      })\n      .catch(error => console.log(\"Pokemon not found!\", error));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Nav />\n        <Container\n          maxWidth=\"xl\"\n          disableGutters={true}\n          style={{ margin: \"2% 8%\" }}\n        >\n          <Typography component=\"div\">\n            <Grid container>\n              {/*Loop through the list and display each object*/}\n              {this.state.pList.map((poke, index) => (\n                <Grid\n                  key={poke.id}\n                  item\n                  xs={6}\n                  md={3}\n                  style={{ marginBottom: \"3%\" }}\n                  onClick={this.handleClick}\n                >\n                  <Card name={poke.name} img={poke.img} id={poke.id} />\n                  <Modal open={this.state.isOpen} onClose={this.handleClose}>\n                    {body}\n                  </Modal>\n                </Grid>\n              ))}\n            </Grid>\n          </Typography>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\nexport default PokeList;\n"]},"metadata":{},"sourceType":"module"}